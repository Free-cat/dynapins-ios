name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-macos:
    name: Test on macOS (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, macos-14]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode version
      run: |
        if [ "${{ matrix.os }}" = "macos-14" ]; then
          sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
        else
          sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
        fi
        xcodebuild -version
      
    - name: Cache Swift PM
      uses: actions/cache@v3
      with:
        path: |
          .build
          ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
      
    - name: Build
      run: swift build -v
      
    - name: Run tests
      run: swift test -v --enable-code-coverage
      
    - name: Generate code coverage
      if: matrix.os == 'macos-14'
      run: |
        xcrun llvm-cov export \
          .build/debug/DynamicPinningPackageTests.xctest/Contents/MacOS/DynamicPinningPackageTests \
          -instr-profile .build/debug/codecov/default.profdata \
          -format="lcov" > coverage.lcov
      
    - name: Upload coverage to Codecov
      if: matrix.os == 'macos-14'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.lcov
        fail_ci_if_error: false

  lint:
    name: SwiftLint
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install SwiftLint
      run: |
        brew install swiftlint
      
    - name: Run SwiftLint
      run: |
        swiftlint --version
        swiftlint lint --strict

  test-ios:
    name: Test on iOS Simulator
    runs-on: macos-14
    strategy:
      matrix:
        destination:
          - 'platform=iOS Simulator,name=iPhone 15,OS=17.2'
          - 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.2'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
        xcodebuild -version
      
    - name: Run iOS Tests
      run: |
        xcodebuild test \
          -scheme DynamicPinning \
          -destination '${{ matrix.destination }}' \
          -skipPackagePluginValidation \
          -enableCodeCoverage YES \
          | xcpretty --test --color || true
      
    - name: Generate iOS code coverage
      if: matrix.destination == 'platform=iOS Simulator,name=iPhone 15,OS=17.2'
      run: |
        xcrun llvm-cov export \
          -instr-profile=$(find ~/Library/Developer/Xcode/DerivedData -name "*.profdata" | head -1) \
          $(find ~/Library/Developer/Xcode/DerivedData -name "DynamicPinning" -type f | head -1) \
          -format="lcov" > coverage-ios.lcov || true
      
    - name: Upload iOS coverage
      if: matrix.destination == 'platform=iOS Simulator,name=iPhone 15,OS=17.2'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage-ios.lcov
        flags: ios
        fail_ci_if_error: false

  build-ios:
    name: Build for iOS
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Select Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
        xcodebuild -version
      
    - name: Build for iOS Simulator
      run: |
        xcodebuild build \
          -scheme DynamicPinning \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.2' \
          -skipPackagePluginValidation \
          | xcpretty || true
      
    - name: Build for iOS Device
      run: |
        xcodebuild build \
          -scheme DynamicPinning \
          -destination 'generic/platform=iOS' \
          -skipPackagePluginValidation \
          | xcpretty || true

